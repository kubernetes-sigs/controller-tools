// Code generated by controller-gen. DO NOT EDIT.

package applyconfiguration

import (
	schema "k8s.io/apimachinery/pkg/runtime/schema"
	cronjob "sigs.k8s.io/controller-tools/pkg/applyconfigurations/testdata/cronjob"
	testdatacronjob "sigs.k8s.io/controller-tools/pkg/applyconfigurations/testdata/cronjob/applyconfiguration/testdata/cronjob"
)

// ForKind returns an apply configuration type for the given GroupVersionKind, or nil if no
// apply configuration type exists for the given GroupVersionKind.
func ForKind(kind schema.GroupVersionKind) interface{} {
	switch kind {
	// Group=testdata, Version=cronjob
	case cronjob.SchemeGroupVersion.WithKind("AssociativeType"):
		return &testdatacronjob.AssociativeTypeApplyConfiguration{}
	case cronjob.SchemeGroupVersion.WithKind("CronJob"):
		return &testdatacronjob.CronJobApplyConfiguration{}
	case cronjob.SchemeGroupVersion.WithKind("CronJobSpec"):
		return &testdatacronjob.CronJobSpecApplyConfiguration{}
	case cronjob.SchemeGroupVersion.WithKind("CronJobStatus"):
		return &testdatacronjob.CronJobStatusApplyConfiguration{}
	case cronjob.SchemeGroupVersion.WithKind("ExampleStruct"):
		return &testdatacronjob.ExampleStructApplyConfiguration{}

	}
	return nil
}
