//go:build !ignore_autogenerated

/*
Copyright2019 The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by helpgen. DO NOT EDIT.

package rbac

import (
	"sigs.k8s.io/controller-tools/pkg/markers"
)

func (Generator) Help() *markers.DefinitionHelp {
	return &markers.DefinitionHelp{
		Category: "",
		DetailedHelp: markers.DetailedHelp{
			Summary: "generates ClusterRole objects.",
			Details: "",
		},
		FieldHelp: map[string]markers.DetailedHelp{
			"RoleName": {
				Summary: "sets the name of the generated ClusterRole.",
				Details: "",
			},
			"FileName": {
				Summary: "sets the file name for the generated manifest(s). If not set, defaults to \"role.yaml\".",
				Details: "",
			},
			"HeaderFile": {
				Summary: "specifies the header text (e.g. license) to prepend to generated files.",
				Details: "",
			},
			"Year": {
				Summary: "specifies the year to substitute for \" YEAR\" in the header file.",
				Details: "",
			},
			"FeatureGates": {
				Summary: "is a comma-separated list of feature gates to enable (e.g., \"alpha=true,beta=false\").",
				Details: "Only RBAC rules with matching feature gates will be included in the generated output.\nFeature gates not explicitly listed are treated as disabled.\nUsage: controller-gen 'rbac:roleName=manager,featureGates=\"alpha=true,beta=false\"' paths=./...",
			},
		},
	}
}

func (Rule) Help() *markers.DefinitionHelp {
	return &markers.DefinitionHelp{
		Category: "RBAC",
		DetailedHelp: markers.DetailedHelp{
			Summary: "specifies an RBAC rule to all access to some resources or non-resource URLs.",
			Details: "",
		},
		FieldHelp: map[string]markers.DetailedHelp{
			"Groups": {
				Summary: "specifies the API groups that this rule encompasses.",
				Details: "",
			},
			"Resources": {
				Summary: "specifies the API resources that this rule encompasses.",
				Details: "",
			},
			"ResourceNames": {
				Summary: "specifies the names of the API resources that this rule encompasses.",
				Details: "Create requests cannot be restricted by resourcename, as the object's name\nis not known at authorization time.",
			},
			"Verbs": {
				Summary: "specifies the (lowercase) kubernetes API verbs that this rule encompasses.",
				Details: "",
			},
			"URLs": {
				Summary: "URL specifies the non-resource URLs that this rule encompasses.",
				Details: "",
			},
			"Namespace": {
				Summary: "specifies the scope of the Rule.",
				Details: "If not set, the Rule belongs to the generated ClusterRole.\nIf set, the Rule belongs to a Role, whose namespace is specified by this field.",
			},
			"FeatureGate": {
				Summary: "specifies the feature gate(s) that control this RBAC rule.",
				Details: "If not set, the rule is always included.\nIf set to a single gate (e.g., \"alpha\"), the rule is included when that gate is enabled.\nIf set to multiple gates separated by \"|\" (e.g., \"alpha|beta\"), the rule is included when ANY of the gates are enabled (OR logic).\nIf set to multiple gates separated by \"&\" (e.g., \"alpha&beta\"), the rule is included when ALL of the gates are enabled (AND logic).",
			},
		},
	}
}
